# https://github.com/goauthentik/helm/blob/main/charts/authentik/values.yaml
authentik:
  # https://docs.goauthentik.io/docs/install-config/configuration/
  avatars: "none"
  log_level: "info" # trace, debug, info, warning, error
  # "secret_key" set from secret-helm-values
  error_reporting:
    enabled: false
  disable_update_check: true
  disable_startup_analytics: true
  postgresql: null # postgres config is set via environment variables
  # "secret_key" is set in secret values.yaml
  # Email configuration
  email:
    host: "postfix-mail.postfix.svc.cluster.local"
    port: 587
    username: ""
    password: ""
    use_tls: false
    use_ssl: false
    from: "admin@cubieserver.de"

server:
  envFrom:
    - secretRef:
        name: authentik-db-credentials

  livenessProbe:
    timeoutSeconds: 5
    periodSeconds: 27
  readinessProbe:
    timeoutSeconds: 5
    periodSeconds: 23
  startupProbe:
    timeoutSeconds: 5

  podLabels:
    networkpolicy-postgres-access: "enabled"

  ingress:
    enabled: true
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt-production
      traefik.ingress.kubernetes.io/router.entrypoints: websecure
    hosts: [ "auth.cubieserver.de" ]
    tls:
    - hosts:
      - auth.cubieserver.de
      secretName: authentik-ingress-cert

  resources:
    requests:
      memory: 450Mi
      cpu: 10m
    limits:
      memory: 900Mi
  securityContext:
    runAsNonRoot: true
  podSecurityContext:
    allowPrivilegeEscalation: false
    capabilities: { drop: ["ALL"] }
    readOnlyRootFilesystem: true

  metrics:
    enabled: true
    serviceMonitor:
      enabled: true

# deploy Bitnami's Redis chart as a dependency
redis:
  enabled: true
  # redis is only used as a cache / queue, no need for persistence
  # disabling persistence uses emptyDir instead
  # https://github.com/bitnami/charts/blob/master/bitnami/redis/README.md
  master:
    persistence:
      enabled: false

# we deploy our own postgres instance
postgresql:
  enabled: false

worker:
  podLabels:
    networkpolicy-postgres-access: "enabled"
  envFrom:
    - secretRef:
        name: authentik-db-credentials
  livenessProbe:
    timeoutSeconds: 5
    periodSeconds: 27
  readinessProbe:
    timeoutSeconds: 5
    periodSeconds: 23
  startupProbe:
    timeoutSeconds: 5
  resources:
    requests:
      memory: 250Mi
      cpu: 50m
    limits:
      memory: 700Mi
      cpu: 500m
  securityContext:
    runAsNonRoot: true
  podSecurityContext:
    allowPrivilegeEscalation: false
    capabilities: { drop: ["ALL"] }
    readOnlyRootFilesystem: true
