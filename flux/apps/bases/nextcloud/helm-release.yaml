apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: nextcloud
spec:
  interval: 5m
  chart:
    spec:
      # https://github.com/nextcloud/helm/tree/main/charts/nextcloud
      chart: "nextcloud"
      version: "3.5.12" # was: "2.14.4"
      sourceRef:
        kind: HelmRepository
        name: nextcloud

  # https://github.com/nextcloud/helm/blob/main/charts/nextcloud/values.yaml
  values:
    image:
      # https://github.com/nextcloud/server/tags
      # https://hub.docker.com/_/nextcloud/?tab=tags
      tag: "26.0.1-apache"

    ingress:
      enabled: true
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-production
        traefik.ingress.kubernetes.io/router.entrypoints: websecure
      # hosts / tls set via overlay

    nextcloud:
      # "host" set via overlay

      # dummy credentials that are only used for the first setup (not respected later)
      username: "admin"
      password: "hunter2"

      # optionally set via overlay
      # mail:
      #   enabled: false
      #   fromAddress: user
      #   domain: domain.com
      #   smtp:
      #     host: domain.com
      #     secure: ssl
      #     port: 465
      #     authtype: LOGIN
      #     name: user
      #     password: pass

      configs:
        custom.config.php: |-
          <?php
          $CONFIG = array (
            /* https://github.com/nextcloud/server/blob/c364b0cb193f66ad15e2950c27113b40037d1bf6/config/config.sample.php#L747-L757 */
            'check_data_directory_permissions' => false,
          );

      podSecurityContext: &podSecurityContext
        runAsUser: 33 # www-data
        runAsGroup: 33
        fsGroup: 33
        runAsNonRoot: true

      securityContext: &containerSecurityContext
        readOnlyRootFilesystem: true
        allowPrivilegeEscalation: false # this might break PHP occ shell
        capabilities:
          drop: ["ALL"]
          # add: ["CAP_NET_BIND_SERVICE"] # allows binding on ports less than 1024
          add:
            # required permissions so busybox crond runs successfully, see `man 2 setgroups`
            # > crond: can't set groups: Operation not permitted
            - "CAP_SETGID"

      # Not working currently, see https://github.com/nextcloud/helm/issues/363
      # containerPort: 8080

      # Mount writeable directories so Apache and friends start up properly
      extraVolumes:
       - name: tmp
         emptyDir: {}
      extraVolumeMounts:
       - name: tmp
         mountPath: "/tmp"
         subPath: "tmp"
       - name: tmp
         mountPath: "/var/tmp"
         subPath: "var-tmp"
       - name: tmp
         mountPath: "/var/run"
         subPath: "var-run"

    resources:
      requests:
        memory: 500Mi
        cpu: 0.5
      limits:
        memory: 4Gi

    # First initialization and subsequent upgrades can take a while, enable startup probe
    startupProbe:
      enabled: true

    internalDatabase:
      enabled: false
    externalDatabase:
      enabled: true
      # hardcoded for now, waiting for https://github.com/nextcloud/helm/pull/366
      database: "nextcloud_test_nextcloud"
      host: "mariadb.mariadb.svc.cluster.local"
      existingSecret:
        enabled: true
        secretName: nextcloud-db-credentials
        usernameKey: username
        passwordKey: password

    # Note to self: Redis is disabled by default
    # redis:
    #   enabled: true
    #   # redis is only used as a cache, no need for persistence
    #   # disabling persistence uses emptyDir instead
    #   # https://github.com/bitnami/charts/blob/master/bitnami/redis/README.md
    #   master:
    #     persistence:
    #       enabled: false

    phpClientHttpsFix:
      enabled: true
      protocol: https

    # separate ServiceAccount for Nextcloud pod
    rbac:
      enabled: true

    persistence:
      enabled: true
      storageClass: "local-path"

    # sidecar
    cronjob:
      enabled: true
      resources:
        requests:
          cpu: 1m
          memory: 1Mi
        limits:
          memory: 250Mi
      securityContext: *containerSecurityContext

  valuesFrom:
    - kind: Secret
      name: secret-helm-values # created in overlay
