---
- name: Install K3s
  hosts: hp-prodesk-g4
  gather_facts: true
  vars:
    # https://github.com/k3s-io/k3s/releases
    k3s_version: v1.31.1+k3s1
    tailscale_interface: tailscale0
    tailscale_ip: "{{ hostvars[inventory_hostname]['ansible_facts'][tailscale_interface]['ipv4']['address'] }}"
    # move to hostvar when necessary
    k3s_mode: server
  tasks:
    - set_fact:
        k3s_service: "k3s"
      when: k3s_mode == "server"
    - set_fact:
        k3s_service: "k3s-agent"
      when: k3s_mode == "agent"

    - name: Download k3s binary amd64
      ansible.builtin.get_url:
        url: https://github.com/k3s-io/k3s/releases/download/{{ k3s_version }}/k3s
        checksum: sha256:https://github.com/k3s-io/k3s/releases/download/{{ k3s_version }}/sha256sum-amd64.txt
        dest: /usr/local/bin/k3s
        owner: root
        group: root
        mode: "0755"
      when: ansible_facts.architecture == "x86_64"

    - name: Copy K3s service file
      ansible.builtin.template:
        src: "k3s.service.j2"
        dest: "/etc/systemd/system/{{ k3s_service }}.service"
        owner: root
        group: root
        mode: "0644"

    - name: Copy K3s agent configuration
      ansible.builtin.template:
        src: "k3s.env.j2"
        dest: "/etc/default/k3s"
        owner: root
        group: root
        mode: "0644"
      when: k3s_mode == "agent"

    - name: Start K3s service
      ansible.builtin.systemd:
        name: "{{ k3s_service }}.service"
        daemon_reload: true
        state: restarted
        enabled: true

    - name: Create service for pruning K3s container images
      ansible.builtin.copy:
        dest: /etc/systemd/system/k3s-prune.service
        content: |
          [Unit]
          Description=Prune K3s container images
          ConditionPathExists=/usr/local/bin/k3s

          [Service]
          Type=oneshot
          ExecStart=/usr/local/bin/k3s crictl rmi --prune
          RemainAfterExit=yes

          [Install]
          WantedBy=multi-user.target
        owner: root
        group: root
        mode: '0644'

    - name: Create timer for pruning K3s container images
      ansible.builtin.copy:
        dest: /etc/systemd/system/k3s-prune.timer
        content: |
          [Unit]
          Description=Monthly prune of K3s container images
          Requires=k3s-prune.service

          [Timer]
          OnCalendar=monthly
          Persistent=true
          RandomizedDelaySec=1h

          [Install]
          WantedBy=timers.target
        owner: root
        group: root
        mode: '0644'

    - name: Enable and start k3s-prune timer
      ansible.builtin.systemd:
        name: k3s-prune.timer
        enabled: true
        state: started
        daemon_reload: true
